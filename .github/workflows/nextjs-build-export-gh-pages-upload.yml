# Simple workflow for deploying static content to GitHub Pages
name: Deploy `./out` static content to Github Pages

on:
  # Runs on pushes targeting the 'main' branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: 'yarn'

      - name: Dump version
        run: |
          node -v
          npm --version
          yarn --version
          git --version

      - id: configurepages
        uses: actions/configure-pages@v5

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - run: yarn
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false # Required for deployment issue

      - name: Run Lint
        run: yarn run lint

      - name: Run Jest Tests
        run: yarn run test:jest-ci

      - run: yarn build
        env:
          EXPORT: 1
          #UNOPTIMIZED: 1   # Disabling this to keep the `cloudflare-image-loader.ts` image loader present
          BASE_PATH: ${{ steps.configurepages.outputs.base_path }}

      # Runs against the minified build output which will strip out helpful debug errors which may be needed if encountering a React console error.
      # However this will be the live output code so good to test against this, instead of running a dev server.
      # https://react.dev/errors/418
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          start: yarn dlx http-server ./out -p 3000   # Run the static HTML build in a http-server
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60
     
      #Upload to GitHub Pages
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4

  # Purge Cloudflare Cache after deployment
  purge-cache:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Cloudflare Cache Purge Action
        uses: NathanVaughn/actions-cloudflare-purge@v3.1.0
        with:
          cf_zone: ${{ secrets.CLOUDFLARE_ZONE }}
          cf_auth: ${{ secrets.CLOUDFLARE_AUTH_KEY }}

  # Run Google Lighthouse check after deployment
  lighthouuse-check:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: purge-cache
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Lighthouse
      uses: foo-software/lighthouse-check-action@v12.0.1
      with:
        urls: 'https://ryanfitton.co.uk'